; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

	TITLE	C:\Users\MintyAnt\Documents\Class\Summer 2013\CompilerDesign\Lab3\1_XOR\xoring.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_main
PUBLIC	??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@		; `string'
EXTRN	_printf:PROC
;	COMDAT ??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@
CONST	SEGMENT
??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@ DB '%d, %d', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
; File c:\users\mintyant\documents\class\summer 2013\compilerdesign\lab3\1_xor\xoring.cpp
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 4    : {

  00000	56		 push	 esi

; 5    : 	int x = 0;
; 6    : 	
; 7    : 	x += 1;
; 8    : 	
; 9    : 	int y = 1;
; 10   : 	
; 11   : 	x -= y;
; 12   : 	
; 13   : 	for (int index=0; index < 50; index++)

  00001	be 32 00 00 00	 mov	 esi, 50			; 00000032H
$LL3@main:

; 14   : 	{
; 15   : 		printf("%d, %d", x, y);

  00006	6a 01		 push	 1
  00008	6a 00		 push	 0
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@
  0000f	e8 00 00 00 00	 call	 _printf
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	4e		 dec	 esi
  00018	75 ec		 jne	 SHORT $LL3@main

; 16   : 	}
; 17   : 	
; 18   : 	return x;

  0001a	33 c0		 xor	 eax, eax
  0001c	5e		 pop	 esi

; 19   : }

  0001d	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
