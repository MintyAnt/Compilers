; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

	TITLE	C:\Users\MintyAnt\Documents\Class\Summer 2013\CompilerDesign\Lab3\1_XOR\xoring2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_main
PUBLIC	??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@		; `string'
EXTRN	_printf:PROC
;	COMDAT ??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@
CONST	SEGMENT
??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@ DB '%d, %d', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
; File c:\users\mintyant\documents\class\summer 2013\compilerdesign\lab3\1_xor\xoring2.cpp
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 4    : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5    : 	int x = 0;
; 6    : 	
; 7    : 	x += 1;
; 8    : 	
; 9    : 	int y = 1;
; 10   : 	
; 11   : 	x -= y;

  00003	33 db		 xor	 ebx, ebx
  00005	bf 01 00 00 00	 mov	 edi, 1

; 12   : 	
; 13   : 	for (int index=0; index < 50; index++)

  0000a	33 f6		 xor	 esi, esi
  0000c	8d 64 24 00	 npad	 4
$LL3@main:

; 14   : 	{
; 15   : 		x *= index;

  00010	8b ce		 mov	 ecx, esi
  00012	0f af cb	 imul	 ecx, ebx

; 16   : 		y /= x;

  00015	8b c7		 mov	 eax, edi
  00017	99		 cdq
  00018	f7 f9		 idiv	 ecx
  0001a	8b f8		 mov	 edi, eax

; 17   : 		x /= y;

  0001c	8b c1		 mov	 eax, ecx
  0001e	99		 cdq
  0001f	f7 ff		 idiv	 edi

; 18   : 		printf("%d, %d", x, y);

  00021	57		 push	 edi
  00022	8b d8		 mov	 ebx, eax
  00024	53		 push	 ebx
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@
  0002a	e8 00 00 00 00	 call	 _printf
  0002f	46		 inc	 esi
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	83 fe 32	 cmp	 esi, 50			; 00000032H
  00036	7c d8		 jl	 SHORT $LL3@main

; 19   : 	}
; 20   : 	
; 21   : 	x = 0;
; 22   : 	
; 23   : 	return x;

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	33 c0		 xor	 eax, eax
  0003c	5b		 pop	 ebx

; 24   : }

  0003d	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
