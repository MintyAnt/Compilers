; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

	TITLE	C:\Users\MintyAnt\Documents\Class\Summer 2013\CompilerDesign\Lab3\1_XOR\xoring2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG3697	DB	'%d, %d', 00H
CONST	ENDS
PUBLIC	_main
EXTRN	_printf:PROC
; Function compile flags: /Odtp
; File c:\users\mintyant\documents\class\summer 2013\compilerdesign\lab3\1_xor\xoring2.cpp
_TEXT	SEGMENT
_index$1 = -12						; size = 4
_y$ = -8						; size = 4
_x$ = -4						; size = 4
_main	PROC

; 4    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 5    : 	int x = 0;

  00006	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _x$[ebp], 0

; 6    : 	
; 7    : 	x += 1;

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _x$[ebp]
  00010	83 c0 01	 add	 eax, 1
  00013	89 45 fc	 mov	 DWORD PTR _x$[ebp], eax

; 8    : 	
; 9    : 	int y = 1;

  00016	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _y$[ebp], 1

; 10   : 	
; 11   : 	x -= y;

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _x$[ebp]
  00020	2b 4d f8	 sub	 ecx, DWORD PTR _y$[ebp]
  00023	89 4d fc	 mov	 DWORD PTR _x$[ebp], ecx

; 12   : 	
; 13   : 	for (int index=0; index < 50; index++)

  00026	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _index$1[ebp], 0
  0002d	eb 09		 jmp	 SHORT $LN3@main
$LN2@main:
  0002f	8b 55 f4	 mov	 edx, DWORD PTR _index$1[ebp]
  00032	83 c2 01	 add	 edx, 1
  00035	89 55 f4	 mov	 DWORD PTR _index$1[ebp], edx
$LN3@main:
  00038	83 7d f4 32	 cmp	 DWORD PTR _index$1[ebp], 50 ; 00000032H
  0003c	7d 35		 jge	 SHORT $LN1@main

; 14   : 	{
; 15   : 		x *= index;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _x$[ebp]
  00041	0f af 45 f4	 imul	 eax, DWORD PTR _index$1[ebp]
  00045	89 45 fc	 mov	 DWORD PTR _x$[ebp], eax

; 16   : 		y /= x;

  00048	8b 45 f8	 mov	 eax, DWORD PTR _y$[ebp]
  0004b	99		 cdq
  0004c	f7 7d fc	 idiv	 DWORD PTR _x$[ebp]
  0004f	89 45 f8	 mov	 DWORD PTR _y$[ebp], eax

; 17   : 		x /= y;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _x$[ebp]
  00055	99		 cdq
  00056	f7 7d f8	 idiv	 DWORD PTR _y$[ebp]
  00059	89 45 fc	 mov	 DWORD PTR _x$[ebp], eax

; 18   : 		printf("%d, %d", x, y);

  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _y$[ebp]
  0005f	51		 push	 ecx
  00060	8b 55 fc	 mov	 edx, DWORD PTR _x$[ebp]
  00063	52		 push	 edx
  00064	68 00 00 00 00	 push	 OFFSET $SG3697
  00069	e8 00 00 00 00	 call	 _printf
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 19   : 	}

  00071	eb bc		 jmp	 SHORT $LN2@main
$LN1@main:

; 20   : 	
; 21   : 	x = 0;

  00073	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _x$[ebp], 0

; 22   : 	
; 23   : 	return x;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _x$[ebp]

; 24   : }

  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
