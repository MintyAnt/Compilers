; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

	TITLE	C:\Users\MintyAnt\Documents\Class\Summer 2013\CompilerDesign\Lab3\2_LoopUnrolling\LoopUnroll.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_main
PUBLIC	??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@		; `string'
EXTRN	_printf:PROC
;	COMDAT ??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@
CONST	SEGMENT
??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@ DB '%d, %d', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
; File c:\users\mintyant\documents\class\summer 2013\compilerdesign\lab3\2_loopunrolling\loopunroll.cpp
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 4    : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5    : 	int x = 20;

  00003	bf 14 00 00 00	 mov	 edi, 20			; 00000014H

; 6    : 	int y = 50;

  00008	be 32 00 00 00	 mov	 esi, 50			; 00000032H
  0000d	8d 5f ef	 lea	 ebx, DWORD PTR [edi-17]
$LL3@main:

; 7    : 	for (int index=0; index < 3; index++)
; 8    : 	{
; 9    : 		x = y / x;

  00010	8b c6		 mov	 eax, esi
  00012	99		 cdq
  00013	f7 ff		 idiv	 edi
  00015	8b f8		 mov	 edi, eax

; 10   : 		y = x / y;

  00017	99		 cdq
  00018	f7 fe		 idiv	 esi
  0001a	8b f0		 mov	 esi, eax

; 11   : 		printf("%d, %d", x, y);

  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_06PHGHDMGF@?$CFd?0?5?$CFd?$AA@
  00023	e8 00 00 00 00	 call	 _printf
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	4b		 dec	 ebx
  0002c	75 e2		 jne	 SHORT $LL3@main

; 12   : 	}
; 13   : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	33 c0		 xor	 eax, eax
  00032	5b		 pop	 ebx
  00033	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
