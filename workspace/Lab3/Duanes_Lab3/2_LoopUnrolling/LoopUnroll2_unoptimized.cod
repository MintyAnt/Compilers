; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

	TITLE	C:\Users\MintyAnt\Documents\Class\Summer 2013\CompilerDesign\Lab3\2_LoopUnrolling\LoopUnroll2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG3697	DB	'%d', 00H
CONST	ENDS
PUBLIC	_main
EXTRN	_printf:PROC
; Function compile flags: /Odtp
; File c:\users\mintyant\documents\class\summer 2013\compilerdesign\lab3\2_loopunrolling\loopunroll2.cpp
_TEXT	SEGMENT
_y$ = -12						; size = 4
_x$ = -8						; size = 4
_index$1 = -4						; size = 4
_main	PROC

; 4    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 5    : 	int x = 20;

  00006	c7 45 f8 14 00
	00 00		 mov	 DWORD PTR _x$[ebp], 20	; 00000014H

; 6    : 	int y = 50;

  0000d	c7 45 f4 32 00
	00 00		 mov	 DWORD PTR _y$[ebp], 50	; 00000032H

; 7    : 	for (int index=0; index < 3; index++)

  00014	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$1[ebp], 0
  0001b	eb 09		 jmp	 SHORT $LN3@main
$LN2@main:
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _index$1[ebp]
  00020	83 c0 01	 add	 eax, 1
  00023	89 45 fc	 mov	 DWORD PTR _index$1[ebp], eax
$LN3@main:
  00026	83 7d fc 03	 cmp	 DWORD PTR _index$1[ebp], 3
  0002a	7d 13		 jge	 SHORT $LN4@main

; 8    : 	{
; 9    : 		printf("%d", index);

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _index$1[ebp]
  0002f	51		 push	 ecx
  00030	68 00 00 00 00	 push	 OFFSET $SG3697
  00035	e8 00 00 00 00	 call	 _printf
  0003a	83 c4 08	 add	 esp, 8

; 10   : 	}

  0003d	eb de		 jmp	 SHORT $LN2@main
$LN4@main:

; 11   : }

  0003f	33 c0		 xor	 eax, eax
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
